#!/usr/bin/env bash

set -e -x


## Environment
# - Target a CF org and space as a SpaceDeveloper

## Variables
# Required:
# - DATADOG_API_KEY
# - DEPLOYMENT_NAME

# Optional:
# - APP_NAME (default: diego-canary-app)
# - INSTANCE_COUNT (default: 20)
# - DOMAIN (defaults to the default domain for the targeted space)
# - CF_COMMAND (default: cf; use 'echo cf' for a dry run)
# - CF_STACK (default: cflinuxfs2)
# - SERVICE_TO_BIND (no default; if specified, binds the given service before cf start)

if [[ -z "${DATADOG_API_KEY}" ]]; then
  echo "Please set the DATADOG_API_KEY environment variable."
  exit 1
fi

if [[ -z "${DEPLOYMENT_NAME}" ]]; then
  echo "Please set the DEPLOYMENT_NAME environment variable."
  exit 1
fi

DIR="$( cd -P "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cf=${CF_COMMAND:-cf}
app_name=${APP_NAME:-diego-canary-app}
instance_count=${INSTANCE_COUNT:-20}
domain_name=${DOMAIN:-}
if [[ -n "${domain_name}" ]]; then
  domain_argument="-d ${domain_name}"
else
  domain_argument=""
fi

pushd "$DIR/.."
  $cf push $app_name --no-start -m 32M -k 64M ${domain_argument} -b go_buildpack
  $cf set-env $app_name DATADOG_API_KEY ${DATADOG_API_KEY}
  $cf set-env $app_name DEPLOYMENT_NAME ${DEPLOYMENT_NAME}
  if [[ -n "${SERVICE_TO_BIND}" ]]; then
    $cf bind-service $app_name ${SERVICE_TO_BIND}
  fi

  $cf set-health-check $app_name http

  $cf start $app_name
  $cf scale $app_name -i $instance_count
popd
